#修改TNAME: K2P-5.0 中的K2P-5.0为你需要编译的型号，注意名称要与configs/templates/目录下的名字相同
name: C.K2P-5.0

on:
  workflow_dispatch:
    inputs:
      name:
        description: "Build Padavan"
        required: true
        default: "build"
  # release:
  #   types: [published]
  push:
    tags:
      - "v*"
  #  branches:
  #    - master
  #  schedule:
  #    - cron: 0 8 * * 5
  #watch:
  #  types: [started]

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
          token: ${{ secrets.R_TOKEN }}
        run: |
          sudo apt-get update
          sudo apt-get -y install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd fakeroot kmod \
          cpio git python-docutils gettext automake autopoint texinfo build-essential help2man \
          pkg-config zlib1g-dev libgmp3-dev libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget libc-dev-bin
      - name: Clone source code
        run: |
          git clone -b chongshengB --depth=1 https://github.com/Yh793/rt-n56u.git /opt/rt-n56u
          cd /opt/rt-n56u/toolchain-mipsel
          ./clean_toolchain
          ./build_toolchain
          mkdir -p /opt/images/
          tar -Jcf mipsel-linux-uclibc.tar.xz toolchain-3.4.x
          sudo mv -f mipsel-linux-uclibc.tar.xz /opt/images/


      - name: Organize files
        id: organize
        run: |
          echo "###########################"
          echo "###########################"
          echo "###########################"
          echo "::set-output name=status::success"
      - name: Upload packages - push to artifact file
        uses: actions/upload-artifact@main
        if: steps.organize.outputs.status == 'success'
        with:
          name: Padavan-packages
          path: /opt/images
      #上传到WeTransfer
      - name: Upload firmware to WeTransfer
        id: wetransfer
        if: steps.organize.outputs.status == 'success'
        run: |
          curl -fsSL git.io/file-transfer | sh
          ./transfer wet  -s -p 16 --no-progress /opt/images/*.trx 2>&1 | tee wetransfer.log
          echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
          echo "DOWNLOADURL2=$(cat wetransfer.log | grep -o -E "https?://[a-zA-Z0-9\.\/_&=@$%?~#-]*")" >> $GITHUB_ENV
          echo "::set-output name=status::success"

      - name: Remove obsolete firmwares on artifacts
        uses: c-hive/gha-remove-artifacts@v1.2.0
        if: always()
        with:
          age: '3 day'
          skip-recent: 5
